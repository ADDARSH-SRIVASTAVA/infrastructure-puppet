# This is the config file for the mod_perl project.

# schedulers

c['schedulers'].append(AnyBranchScheduler(name="oncommit",
                         branches=["perl/modperl/trunk", "perl/modperl/branches/threading"],
                         treeStableTimer=2,
                         builderNames=["mod_perl_2_trunk"]))

#builders


f1 = factory.BuildFactory()
f1.addStep(SVN(repourl=Interpolate("https://svn.apache.org/repos/asf/%(src::branch:~perl/modperl/trunk)s")))
f1.addStep(Compile(command=["perl" , "Makefile.PL" , "MP_APXS=/usr/bin/apxs2"]))
f1.addStep(Compile(command=["make"]))
f1.addStep(Compile(command=["make" , "test"]))
f1.addStep(ShellCommand(
            command=['bash', '-c', 'ant -f /home/buildslave1/slave1/rat-buildfiles/mod_perl.xml -lib /home/buildslave1/'],
            description=["RAT Testing"],
            descriptionDone=["RAT Report Complete"],
            haltOnFailure=True,
))

f1.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/mod_perl/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f1.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/mod_perl/rat-output.xml;
            cp /tmp/mod_perl/rat-output.xml /x1/buildmaster/master1/public_html/projects/mod_perl/rat-output.xml"""))

# Cleanup tmp

f1.addStep(MasterShellCommand(command="""
            rm -rf /tmp/mod_perl""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..
b1 = {'name': "mod_perl_2_trunk",
      'slavename': "orcus_ubuntu",
      'builddir': "mod_perl_2_trunk",
      'factory': f1,
      'category': "mod_perl_2_trunk",
      }

c['builders'].append(b1)

#mail status

c['status'].append(mail.MailNotifier(fromaddr="buildbot@apache.org",
                                     extraRecipients=["dev@perl.apache.org"],
                                     sendToInterestedUsers=False,
                                     mode="failing",
                                     categories=["mod_perl_2_trunk"]))

#c['status'].append(words.IRC(host="irc.freenode.net", nick="mod_perl_bot",
#                             allowForce=True,
#                             channels=["#asftest"],
#			     notify_events={
#				'successToFailure': 1,
#				'failureToSuccess': 1,
#				},
#                             categories=["mod_perl_2_trunk"]))

