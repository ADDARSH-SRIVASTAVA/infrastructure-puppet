# This is the config file for the trafficserver project.

# Exclude non important files.

TserverExcludes = masterExcludes + ["REVIEWERS"]
TserverExcludes = map(re.compile, TserverExcludes)
isTserverImportant = wasCodeTouched(TserverExcludes)

# schedulers

c['schedulers'].append(SingleBranchScheduler(name="on-trafficserver-git-commit",
                    change_filter=filter.ChangeFilter(branch='master' , project="trafficserver"),
                    treeStableTimer=60,
                    builderNames=["tserver-trunk" , "tserver-trunk-debug" , "tserver-fbsd-trunk" , "tserver-fbsd-trunk-debug" , "tserver-solaris-trunk" , "tserver-solaris-trunk-debug" , "tserver-fedora-trunk" , "tserver-fedora-trunk-debug" , "tserver-osx-trunk" , "tserver-osx-trunk-debug"],
                    fileIsImportant=isTserverImportant))

c['schedulers'].append(SingleBranchScheduler(name="on-trafficserver-branch3.0.x-git-commit",
                    change_filter=filter.ChangeFilter(branch='3.0.x' , project="trafficserver"),
                    treeStableTimer=60,
                    builderNames=["tserver-branch3.0.x"],
                    fileIsImportant=isTserverImportant))

c['schedulers'].append(SingleBranchScheduler(name="on-trafficserver-branch3.2.x-git-commit",
                    change_filter=filter.ChangeFilter(branch='3.2.x' , project="trafficserver"),
                    treeStableTimer=60,
                    builderNames=["tserver-branch3.2.x" , "tserver-branch3.2.x-debug"],
                    fileIsImportant=isTserverImportant))

c['schedulers'].append(Nightly(name='doxygenNightly',
              builderNames=['doxygen-nightly'],
              branch=None,
              hour=13,
              minute=0,
))

#builders

f29 = factory.BuildFactory()
f29.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f29.addStep(Compile(command=["autoreconf", "-i"]))
f29.addStep(Compile(command=["./configure" , "--prefix=/home/buildslave3/slave3/tserver-trunk/build/ats-install" , "--with-group=buildslave3" , "--with-user=buildslave3" , "--enable-wccp" , "--enable-tproxy", "--enable-experimental-plugins"]))
f29.addStep(Compile(command=["make"]))
f29.addStep(Compile(command=["make" , "check"]))
f29.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f29.addStep(Compile(command=["make" , "install"]))
f29.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"]))

f29.addStep(ShellCommand(
            command=['bash', '-c', 'ant -f /home/buildslave3/slave3/rat-buildfiles/tserver.xml -lib /home/buildslave3/'],
            description=["RAT Testing"],
            descriptionDone=["RAT Report Complete"],
            haltOnFailure=True,
))

f29.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/tserver/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f29.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/trafficserver/rat-output.xml;
            cp /tmp/tserver/rat-output.xml /x1/buildmaster/master1/public_html/projects/trafficserver/rat-output.xml"""))

f29.addStep(MasterShellCommand(command="""
            rm -rf /tmp/tserver""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..
b29 = {'name': "tserver-trunk",
      'slavename': "bb-vm_ubuntu",
      'builddir': "tserver-trunk",
      'factory': f29,
      'category': "tserver-trunk",
      }

c['builders'].append(b29)

f39 = factory.BuildFactory()
f39.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f39.addStep(Compile(command=["autoreconf", "-i"]))
f39.addStep(Compile(command=["./configure" , "--prefix=/home/buildslave3/slave3/tserver-branch3.0.x/build/ats-install", "--with-group=buildslave3" , "--with-user=buildslave3"]))
f39.addStep(Compile(command=["make"]))
f39.addStep(Compile(command=["make" , "check"]))
f39.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f39.addStep(Compile(command=["make" , "install"]))
f39.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"]))

f39.addStep(ShellCommand(
            command=['bash', '-c', 'ant -f /home/buildslave3/slave3/rat-buildfiles/tserver-branch3.0.x.xml -lib /home/buildslave3/'],
            description=["RAT Testing"],
            descriptionDone=["RAT Report Complete"],
            haltOnFailure=True,
))

f39.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/tserver/3.0.x/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f39.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/trafficserver/3.0.x/rat-output.xml;
            cp /tmp/tserver/3.0.x/rat-output.xml /x1/buildmaster/master1/public_html/projects/trafficserver/3.0.x/rat-output.xml"""))

# Cleanup tmp

f39.addStep(MasterShellCommand(command="""
            rm -rf /tmp/tserver""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..
b39 = {'name': "tserver-branch3.0.x",
      'slavename': "bb-vm_ubuntu",
      'builddir': "tserver-branch3.0.x",
      'factory': f39,
      'category': "tserver-branch3.0.x",
      }

c['builders'].append(b39)

f52 = factory.BuildFactory()
f52.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git",
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f52.addStep(ShellCommand(command=['bash' , '-c' ,
					"/opt/csw/bin/autoreconf -if"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f52.addStep(ShellCommand(command=['bash' , '-c' , 
                './configure --prefix=/export/home/buildbot/slave5/tserver-solaris-trunk/build/ats-install --with-user=buildbot --with-group=other --enable-experimental-plugins --with-expat=/opt/csw/include:/opt/csw/lib/amd64 --with-pcre=/opt/csw/include:/opt/csw/lib/amd64 --with-zlib=/opt/csw/include:/opt/csw/lib/amd64 --with-pcre=/opt/cswinclude:/opt/csw/lib/amd64 --with-tcl=/opt/csw/lib/amd64 --with-lua=/opt/csw  --with-openssl=/opt/csw/include:/opt/csw/lib/amd64'],
                env={'ACLOCAL': '',
				'CC': 'gcc',
				'CXX': 'g++',
				'LDFLAGS': '-L/opt/csw/lib/amd64 -R/opt/csw/lib/amd64',
				'CFLAGS': '-m64',
				'CPPFLAGS': '-I/opt/csw/include',
				'CXXFLAGS': '-m64',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f52.addStep(Compile(command=["gmake"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f52.addStep(Compile(command=["gmake", "check"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f52.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f52.addStep(Compile(command=["gmake", "install"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f52.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))


b52 = {'name': "tserver-solaris-trunk",
      'slavename': "bb-solaris_zone",
      'builddir': "tserver-solaris-trunk",
      'factory': f52,
      'category': "tserver-solaris-trunk",
      }
c['builders'].append(b52)

f53 = factory.BuildFactory()
f53.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f53.addStep(Compile(command=["autoreconf", "-i"]))
f53.addStep(Compile(command=["./configure", "--prefix=/home/buildslave27/slave27/tserver-fbsd-trunk/build/ats-install" , "--enable-experimental-plugins", "--with-group=buildslave27" , "--with-user=buildslave27"]))
f53.addStep(Compile(command=["gmake"]))
f53.addStep(Compile(command=["gmake", "check"]))
f53.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f53.addStep(Compile(command=["gmake", "install"]))
f53.addStep(Compile(command=["ats-install/bin/traffic_server", "-R", "1"]))

b53 = {'name': "tserver-fbsd-trunk",
      'slavename': "bb-fbsd2_64bit",
      'builddir': "tserver-fbsd-trunk",
      'factory': f53,
      'category': "tserver-fbsd-trunk",
      }

c['builders'].append(b53)

f56 = factory.BuildFactory()
f56.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f56.addStep(Compile(command=["autoreconf", "-i"]))
f56.addStep(Compile(command=["./configure", "--prefix=/home/buildslave13/slave13/tserver-fedora-trunk/build/ats-install", "--with-user=buildslave13", "--with-group=buildslave13", "--enable-wccp" , "--enable-tproxy", "--enable-experimental-plugins"]))
f56.addStep(Compile(command=["make"]))
f56.addStep(Compile(command=["make", "check"]))
f56.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f56.addStep(Compile(command=["make", "install"]))
f56.addStep(Compile(command=["ats-install/bin/traffic_server", "-R", "1"]))

b56 = {'name': "tserver-fedora-trunk",
      'slavename': "bb-fedora",
      'builddir': "tserver-fedora-trunk",
      'factory': f56,
      'category': "tserver-fedora-trunk",
      }

c['builders'].append(b56)

#Doxygen Stuff

f61 = factory.BuildFactory()
f61.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))

f61.addStep(Compile(command=["autoreconf", "-i"]))
f61.addStep(Compile(command=["./configure"]))
f61.addStep(Compile(command=["make"]))

f61.addStep(ShellCommand(
             # command=['doxygen' , 'doc/Doxyfile.in'], # alternative
             command=['make' , 'doxygen']
))

f61.addStep(DirectoryUpload(slavesrc="doc/html",
                       masterdest="/tmp/tserver/doxygen/",
		       haltOnFailure=True,
))

f61.addStep(MasterShellCommand(command="""
            rm -rf /x1/buildmaster/master1/public_html/projects/trafficserver/trunk/doxygen/*;
            cp -r /tmp/tserver/doxygen/* /x1/buildmaster/master1/public_html/projects/trafficserver/trunk/doxygen"""))

# Cleanup tmp
f61.addStep(MasterShellCommand(command="""
            rm -rf /tmp/tserver/doxygen""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..
b61 = {'name': "doxygen-nightly",
      'slavename': "bb-vm_ubuntu",
      'builddir': "doxygen-nightly",
      'factory': f61,
      'category': "doxygen-nightly",
      }

c['builders'].append(b61)

#builders

# trunk-debug

f64 = factory.BuildFactory()
f64.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f64.addStep(Compile(command=["autoreconf", "-i"]))
f64.addStep(Compile(command=["./configure", "--enable-wccp", "--enable-experimental-plugins", "--enable-debug", "--prefix=/home/buildslave1/slave1/tserver-trunk-debug/build/ats-install" , "--with-group=buildslave1" , "--with-user=buildslave1"]))
f64.addStep(Compile(command=["make"]))
f64.addStep(Compile(command=["make" , "check"]))
f64.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f64.addStep(Compile(command=["make" , "install"]))
f64.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"]))

b64 = {'name': "tserver-trunk-debug",
      'slavename': "orcus_ubuntu",
      'builddir': "tserver-trunk-debug",
      'factory': f64,
      'category': "tserver-trunk-debug",
      }

c['builders'].append(b64)

f79 = factory.BuildFactory()
f79.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f79.addStep(Compile(command=["autoreconf", "-i"]))
f79.addStep(Compile(command=["./configure" , "CC=clang", "CXX=clang++", "--with-pcre=/opt/local" , "--enable-experimental-plugins", "--prefix=/Users/buildslave28/slave28/tserver-osx-trunk/build/ats-install" , "--with-group=buildslave28" , "--with-user=buildslave28"]))
f79.addStep(Compile(command=["make"]))
f79.addStep(Compile(command=["make" , "check"]))
f79.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f79.addStep(Compile(command=["make" , "install"]))
f79.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"]))

b79 = {'name': "tserver-osx-trunk",
      'slavename': "bb-osx-slave",
      'builddir': "tserver-osx-trunk",
      'factory': f79,
      'category': "tserver-osx-trunk",
      }

c['builders'].append(b79)

# branch 3.2 normal

f_trs_1 = factory.BuildFactory()
f_trs_1.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f_trs_1.addStep(Compile(command=["autoreconf", "-i"]))
f_trs_1.addStep(Compile(command=["./configure" , "--prefix=/home/buildslave21/slave21/tserver-branch3.2.x/build/ats-install", "--with-group=buildslave21" , "--with-user=buildslave21"]))
f_trs_1.addStep(Compile(command=["make"]))
f_trs_1.addStep(Compile(command=["make" , "check"]))
f_trs_1.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f_trs_1.addStep(Compile(command=["make" , "install"]))
f_trs_1.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"]))

f_trs_1.addStep(ShellCommand(
            command=['bash', '-c', 'ant -f /home/buildslave21/slave21/rat-buildfiles/tserver-branch3.2.x.xml -lib /home/buildslave21/'],
            description=["RAT Testing"],
            descriptionDone=["RAT Report Complete"],
            haltOnFailure=True,
))

f_trs_1.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/tserver/3.2.x/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f_trs_1.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/trafficserver/3.2.x/rat-output.xml;
            cp /tmp/tserver/3.2.x/rat-output.xml /x1/buildmaster/master1/public_html/projects/trafficserver/3.2.x/rat-output.xml"""))

# Cleanup tmp

f_trs_1.addStep(MasterShellCommand(command="""
            rm -rf /tmp/tserver/3.2.x/""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..
b_trs_1 = {'name': "tserver-branch3.2.x",
          'slavename': "bb-bm_ubuntu",
          'builddir': "tserver-branch3.2.x",
          'factory': f_trs_1,
          'category': "tserver-branch3.2.x",
          }

c['builders'].append(b_trs_1)

# branch 3.2.x debug

f_trs_2 = factory.BuildFactory()
f_trs_2.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f_trs_2.addStep(Compile(command=["autoreconf", "-i"]))
f_trs_2.addStep(Compile(command=["./configure", "--enable-wccp", "--enable-debug", "--prefix=/home/buildslave1/slave1/tserver-branch3.2.x-debug/build/ats-install" , "--with-group=buildslave1" , "--with-user=buildslave1"]))
f_trs_2.addStep(Compile(command=["make"]))
f_trs_2.addStep(Compile(command=["make" , "check"]))
f_trs_2.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f_trs_2.addStep(Compile(command=["make" , "install"]))
f_trs_2.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"]))

b_trs_2 = {'name': "tserver-branch3.2.x-debug",
      'slavename': "orcus_ubuntu",
      'builddir': "tserver-branch3.2.x-debug",
      'factory': f_trs_2,
      'category': "tserver-branch3.2.x-debug",
      }

c['builders'].append(b_trs_2)

# fbsd-trunk-debug

f_trs_3 = factory.BuildFactory()
f_trs_3.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f_trs_3.addStep(Compile(command=["autoreconf", "-i"]))
f_trs_3.addStep(Compile(command=["./configure", "--enable-wccp", "--enable-experimental-plugins", "--enable-debug", "--prefix=/home/buildslave27/slave27/tserver-fbsd-trunk-debug/build/ats-install" , "--with-group=buildslave27" , "--with-user=buildslave27"]))
f_trs_3.addStep(Compile(command=["gmake"]))
f_trs_3.addStep(Compile(command=["gmake", "check"]))
f_trs_3.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f_trs_3.addStep(Compile(command=["gmake", "install"]))
f_trs_3.addStep(Compile(command=["ats-install/bin/traffic_server", "-R", "1"]))

b_trs_3 = {'name': "tserver-fbsd-trunk-debug",
      'slavename': "bb-fbsd2_64bit",
      'builddir': "tserver-fbsd-trunk-debug",
      'factory': f_trs_3,
      'category': "tserver-fbsd-trunk-debug",
      }

c['builders'].append(b_trs_3)

# osx-trunk-debug

f_trs_4 = factory.BuildFactory()
f_trs_4.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f_trs_4.addStep(Compile(command=["autoreconf", "-i"]))
f_trs_4.addStep(Compile(command=["./configure" , "CC=clang", "CXX=clang++", "--with-pcre=/opt/local" , "--enable-experimental-plugins", "--enable-debug", "--prefix=/Users/buildslave28/slave28/tserver-osx-trunk/build/ats-install" , "--with-group=buildslave28" , "--with-user=buildslave28"]))
f_trs_4.addStep(Compile(command=["make"]))
f_trs_4.addStep(Compile(command=["make" , "check"]))
f_trs_4.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f_trs_4.addStep(Compile(command=["make" , "install"]))
f_trs_4.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"]))

b_trs_4 = {'name': "tserver-osx-trunk-debug",
      'slavename': "bb-osx-slave",
      'builddir': "tserver-osx-trunk-debug",
      'factory': f_trs_4,
      'category': "tserver-osx-trunk-debug",
      }

c['builders'].append(b_trs_4)

# solaris-trunk-debug

f_trs_5 = factory.BuildFactory()
f_trs_5.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git",
                env={'ACLOCAL': '',
				     'PATH': '/opt/csw/bin:/opt/csw/gnu:/bin'
}))
f_trs_5.addStep(ShellCommand(command=['bash' , '-c' ,
					"/opt/csw/bin/autoreconf -if"],
                env={'ACLOCAL': '',
				'CC': 'gcc',
				'CXX': 'g++',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f_trs_5.addStep(ShellCommand(command=['bash' , '-c' , 
                './configure --enable-debug --prefix=/export/home/buildbot/slave5/tserver-solaris-trunk-debug/build/ats-install --with-user=buildbot --with-group=other --enable-experimental-plugins --with-expat=/opt/csw/include:/opt/csw/lib/amd64 --with-pcre=/opt/csw/include:/opt/csw/lib/amd64 --with-zlib=/opt/csw/include:/opt/csw/lib/amd64 --with-pcre=/opt/cswinclude:/opt/csw/lib/amd64 --with-tcl=/opt/csw/lib/amd64 --with-lua=/opt/csw  --with-openssl=/opt/csw/include:/opt/csw/lib/amd64'],
                env={'ACLOCAL': '',
				'CC': 'gcc',
				'CXX': 'g++',
				'LDFLAGS': '-L/opt/csw/lib/amd64 -R/opt/csw/lib/amd64',
				'CFLAGS': '-m64',
				'CXXFLAGS': '-m64',
				'CPPFLAGS': '-I/opt/csw/include',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f_trs_5.addStep(Compile(command=["gmake"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f_trs_5.addStep(Compile(command=["gmake", "check"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f_trs_5.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f_trs_5.addStep(Compile(command=["gmake", "install"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))
f_trs_5.addStep(Compile(command=["ats-install/bin/traffic_server" , "-R" , "1"],
                env={'ACLOCAL': '',
				'PATH': '/opt/csw/bin:/opt/csw/gnu:/usr/xpg4/bin:/usr/ccs/bin:/usr/bin'
}))


b_trs_5 = {'name': "tserver-solaris-trunk-debug",
      'slavename': "bb-solaris_zone",
      'builddir': "tserver-solaris-trunk-debug",
      'factory': f_trs_5,
      'category': "tserver-solaris-trunk-debug",
      }
c['builders'].append(b_trs_5)

# fedora-trunk-debug

f_trs_6 = factory.BuildFactory()
f_trs_6.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/trafficserver.git"))
f_trs_6.addStep(Compile(command=["autoreconf", "-i"]))
f_trs_6.addStep(Compile(command=["./configure" , "--enable-debug" , "--prefix=/home/buildslave13/slave13/tserver-fedora-trunk-debug/build/ats-install", "--with-group=buildslave13", "--with-user=buildslave13", "--enable-wccp" , "--enable-tproxy", "--enable-experimental-plugins"]))
f_trs_6.addStep(Compile(command=["make"]))
f_trs_6.addStep(Compile(command=["make", "check"]))
f_trs_6.addStep(Compile(command=["rm", "-rf", "ats-install"]))
f_trs_6.addStep(Compile(command=["make", "install"]))
f_trs_6.addStep(Compile(command=["ats-install/bin/traffic_server", "-R", "1"]))

b_trs_6 = {'name': "tserver-fedora-trunk-debug",
      'slavename': "bb-fedora",
      'builddir': "tserver-fedora-trunk-debug",
      'factory': f_trs_6,
      'category': "tserver-fedora-trunk-debug",
      }

c['builders'].append(b_trs_6)

#mail status

c['status'].append(mail.MailNotifier(fromaddr="buildbot@apache.org",
                                     extraRecipients=["commits@trafficserver.apache.org"],
                                     sendToInterestedUsers=False,
                                     mode="change",
                                     categories=["tserver-trunk" , "tserver-trunk-debug" , "tserver-branch3.0.x", "tserver-branch3.2.x" , "tserver-branch3.2.x-debug" , "tserver-fbsd-trunk" , "tserver-solaris-trunk" , "tserver-fedora-trunk" , "tserver-osx-trunk"]))

c['status'].append(words.IRC(host="irc.freenode.net", nick="tserver-bot",
                             allowForce=True,
                             channels=["#traffic-server-ci"],
			     notify_events={
			       'successToFailure': 1,
			       'failureToSuccess': 1,
                               'started': 1,
                               'finished': 1,
			       },
                             categories=["tserver-trunk" , "tserver-trunk-debug" , "tserver-branch3.0.x" , "tserver-branch3.2.x" , "tserver-branch3.2.x-debug" , "tserver-fbsd-trunk" , "tserver-fbsd-trunk-debug" , "tserver-solaris-trunk" , "tserver-solaris-trunk-debug" , "tserver-fedora-trunk" , "tserver-osx-trunk" , "tserver-fedora-trunk-debug" , "tserver-osx-trunk-debug"]))

