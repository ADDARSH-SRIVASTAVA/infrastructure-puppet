import operator
import re
def wasCodeTouched(excludes=[]):
    """Given EXCLUDES, a list of re.compile()'d patterns,
    return a function that.. """
    def isChangeImportant(change):
        """.. takes one buildbot 'Change' object and returns True if it
        contains at least one file (pathname) that no pattern in EXCLUDES
        matches."""
        return any(not any(pattern.match(file) for pattern in excludes)
                   for file in change.files)
    return isChangeImportant

def one_file(f, symbols_to_keep=set()):
    globals_copy = globals().copy()
    execfile(FP + f, globals_copy, globals_copy)
    for symbol in symbols_to_keep:
        if symbol in globals_copy:
            globals().update({symbol: globals_copy[symbol]})

normal_files = (
  'apr.conf', # Builders [apr_1 -> apr_12]
  'mod_perl.conf', # Builders [1]
  'tomee.conf', # Builders [3,22,42,78,83,116]
#  'couchdb.conf', # Builders [5,20,55] ## Disabled as project doesnt use it currently.
  'apache-dbi.conf', # Builders [6]
  'apache-reload.conf', # Builders [7]
  'apache-sizelimit.conf', # Builders [8]
  'apache-test.conf', # Builders [9]
  'pdfbox.conf', # Builders [11]
#  'tika.conf', # Builders [12] ## disabled as project uses jenkins
  'droids.conf', # Builders [13]
  'buildr.conf', # Builders [14]
  'flink.conf', # Builders [flink_branches]
  'forrest.conf', # Builders [15]
  'ofbiz.conf', # Builders [16,19,65]
#   'nexus.conf', # Builders [17]
  'log4php.conf', # Builders [18]
  'juddi.conf', # Builders [24,25,26,sco_1]
  'stdcxx.conf', # Builders [27]
 'subversion.conf', #Builders [30,45,46,47,48,49,50,51,82,98,173,174*]
  'tomcat.conf', #Builders [36,37]
  'uima.conf', #Builders [38]
  'avro.conf', # Builders [40,41,54,58,59]
#   'zeta.conf', # Builders [57] *Disabled, project retired*
  'fop.conf', # Builders [60] 
#   'tuscany.conf', # Builders [62] *Disabled*
  'geronimo.conf', # Builders [66,67,68,69,70,71,72,73,74,75,76,77,81,84,85,86,172] **
  'wicket.conf', # Builders [wic_1]
  'cayenne.conf', # Builders [cay_1, 121]
  'jmeter.conf', # Builders [jme_1,jme_2]
  'tapestry.conf', # Builders [tap_1, 90]
  'bloodhound.conf', # Builders [bh_1, bh_2, bh_3, bh_4]
  'openjpa.conf', # Builders [ojpa_1]
  'sling.conf', # Builders [sling_1, sling_2]
  'log4j2.conf', # Builders [log4j2_1]
  'infra-puppet.conf', #Builders [infrap-1]
  'corinthia.conf', # Builders [cori_1]
)

cms_files = (
  'infra.conf', # Builders [91,103]
  'libcloud.conf', #Builders [35]
  'etch.conf', #Builders [32]
  'httpd.conf', # Builders [63]
  'wookie.conf', # Builders [28]
  'creadur.conf', # Builders [2]
  'lucy.conf', # Builders [b_lucy_2]
  'lucene.conf', # Builders [129]
  'openofficeorg.conf',
  'odftoolkit.conf', # Builders [119]
  'cordova.conf', # Builders [cor_1]
  'cxf.conf', # Builders [134]
  'camel.conf', # Builders [136]
  'openwebbeans.conf', # Builders [b_owb_prod]
  'activemq.conf', # Builders [165]
  'santuario.conf', # Builders [166]
)
for f in normal_files + ('cms.conf',) + cms_files:
  # cms.conf Defines cms_staging_build() for cms_files to use
  one_file(f, set(['cms_staging_build'] if f == 'cms.conf' else []))
