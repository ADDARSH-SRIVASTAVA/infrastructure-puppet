# This is the config file for the Odftoolkit project.

cms_staging_build(project='odftoolkit', commitlist='odf-commits@incubator.apache.org', branch='incubator/odf/site')

# schedulers

c['schedulers'].append(AnyBranchScheduler(name="on-odftoolkit-trunk-commit",
                         branches=["incubator/odf/trunk"],
                         treeStableTimer=2,
                         builderNames=["odftoolkit-trunk"]))

#builders

# check RAT

f119 = factory.BuildFactory()
f119.addStep(SVN(repourl=Interpolate("https://svn.apache.org/repos/asf/%(src::branch:~incubator/odf/trunk)s")))
f119.addStep(ShellCommand(
             command=["svn" , "export" , "http://svn.apache.org/repos/asf/incubator/odf/pmc/ip-clearance/rat-excludes"]))

# If checkout of source didn't work, then no point continuing.

# f119.addStep(Compile(command=["build"],
#                     haltOnFailure=True,
# ))
# Above is disabled - we are only doing a RAT report on svn source

f119.addStep(ShellCommand(
             command=['bash', '-c', 'ant -f /home/buildslave18/slave18/rat-buildfiles/odftoolkit-trunk.xml -lib /home/buildslave18/'],
             description=["RAT Testing"],
             descriptionDone=["RAT Report Complete"],
             haltOnFailure=True,
))


# Above performs RAT tests on entire odf build directories, output to txt file.
# Now we will publish that report to ci.apache.org/projects/odftoolkit/rat-output.xml
# assuming that the report step itself was successful.

f119.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/odftoolkit/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f119.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/odftoolkit/rat-output.xml;
            cp /tmp/odftoolkit/rat-output.xml /x1/buildmaster/master1/public_html/projects/odftoolkit/rat-output.xml""",
))

# Cleanup tmp

f119.addStep(MasterShellCommand(command="""
            rm -rf /tmp/odftoolkit""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..      

b119 = {'name': "odftoolkit-trunk",
      'slavename': "hemera_ubuntu",
      'builddir': "odftoolkit-trunk",
      'factory': f119,
      'category': "odftoolkit-trunk",
      }

c['builders'].append(b119)

#mail status

c['status'].append(mail.MailNotifier(fromaddr="buildbot@apache.org",
                                     extraRecipients=["odf-commits@incubator.apache.org"],
                                     sendToInterestedUsers=False,
                                     mode="change",
                                     categories=["odftoolkit-trunk"]))

#irc status

#c['status'].append(words.IRC(host="irc.freenode.net", nick="odftoolkit-bot",
#                             allowForce=True,
#                             channels=["#asftest"],
#			     notify_events={
#			       'successToFailure': 1,
#			       'failureToSuccess': 1,
#                               'started': 1,
#                               'finished': 1,
#			       },
#                             categories=["odftoolkit-trunk"]))

