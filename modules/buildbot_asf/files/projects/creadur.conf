# This is the config file for the creadur project.

cms_staging_build(project='creadur')

# schedulers

rat_version = '0.12-SNAPSHOT'

c['schedulers'].append(AnyBranchScheduler(name="on-rat-commit",
                         branches=["creadur/rat/trunk"],
                         treeStableTimer=2,
                         builderNames=["rat_trunk"]))

c['schedulers'].append(AnyBranchScheduler(name="on-whisker-commit",
                         branches=["creadur/whisker/trunk"],
                         treeStableTimer=2,
                         builderNames=["whisker-trunk"]))

c['schedulers'].append(AnyBranchScheduler(name="on-tentacles-commit",
                         branches=["creadur/tentacles/trunk"],
                         treeStableTimer=2,
                         builderNames=["tentacles-trunk"]))

#builders

# rat builder

f2 = factory.BuildFactory()
f2.addStep(SVN(repourl=Interpolate("https://svn.apache.org/repos/asf/%(src::branch:~creadur/rat/trunk)s")))

f2.addStep(Compile(command=["mvn" , "clean" , "install" , "package"]))
f2.addStep(Compile(command=["mvn" , "site"]))
f2.addStep(FileUpload(slavesrc="apache-rat/target/apache-rat-" + rat_version + ".jar",
                      masterdest="/x1/buildmaster/apache-rat-" + rat_version + ".jar"))

# Above uploads the latest RAT jar to master for use by other projects to test RAT output.

f2.addStep(ShellCommand(
           command=["cp" , "apache-rat/target/apache-rat-" + rat_version + ".jar" , "/home/buildslave2/"],
           description=["Copy Jar"],
           descriptionDone=["Jar Copied"]))

# Above copies the latest RAT jar local to slave for use by other projects to test RAT output.

# Upload the RAT site for previews

f2.addStep(DirectoryUpload(slavesrc="target/site",
                       masterdest="/tmp/rat/site",
		       haltOnFailure=True,
))

f2.addStep(DirectoryUpload(slavesrc="apache-rat/target/site",
                       masterdest="/tmp/rat/site/apache-rat",
		       haltOnFailure=True,
))

f2.addStep(DirectoryUpload(slavesrc="apache-rat-core/target/site",
                       masterdest="/tmp/rat/site/apache-rat-core",
		       haltOnFailure=True,
))

f2.addStep(DirectoryUpload(slavesrc="apache-rat-plugin/target/site",
                       masterdest="/tmp/rat/site/apache-rat-plugin",
		       haltOnFailure=True,
))

f2.addStep(DirectoryUpload(slavesrc="apache-rat-tasks/target/site",
                       masterdest="/tmp/rat/site/apache-rat-tasks",
		       haltOnFailure=True,
))

f2.addStep(MasterShellCommand(command="""
            rm -rf /x1/buildmaster/master1/public_html/projects/creadur/rat/*;
            cp -r /tmp/rat/site/* /x1/buildmaster/master1/public_html/projects/creadur/rat/"""))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..
# Now produce a RAT report.

f2.addStep(ShellCommand(
            command=['bash', '-c', 'java -jar /home/buildslave2/apache-rat-' + rat_version + '.jar -x --exclude target stage .buildbot-sourcedata BUILD.txt -d /home/buildslave2/slave2/rat_trunk/build/ > ../rat-output.xml'],
            description=["RAT Testing"],
            descriptionDone=["RAT Report Complete"],
            haltOnFailure=True,
))

# Above performs RAT tests on entire rat build directories, output to xml file.
# Now we will publish that report to ci.apache.org/projects/creadur/rat/rat-output.xml
# assuming that the report step itself was successful.

f2.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/rat/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f2.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/creadur/rat/rat-output.xml;
            cp /tmp/rat/rat-output.xml /x1/buildmaster/master1/public_html/projects/creadur/rat/rat-output.xml"""))

# Cleanup tmp

f2.addStep(MasterShellCommand(command="""
            rm -rf /tmp/rat""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..

b2 = {'name': "rat_trunk",
      'slavename': "lares_ubuntu",
      'builddir': "rat_trunk",
      'factory': f2,
      'category': "rat-trunk",
      }

c['builders'].append(b2)

# whisker builder

f_creadur_2 = factory.BuildFactory()
f_creadur_2.addStep(SVN(repourl=Interpolate("https://svn.apache.org/repos/asf/%(src::branch:~creadur/whisker/trunk)s")))

f_creadur_2.addStep(Compile(command=["mvn" , "clean" , "install"]))

b_creadur_2 = {'name': "whisker-trunk",
      'slavename': "lares_ubuntu",
      'builddir': "whisker-trunk",
      'factory': f_creadur_2,
      'category': "whisker-trunk",
      }

c['builders'].append(b_creadur_2)

# tentacles builder

f_creadur_3 = factory.BuildFactory()
f_creadur_3.addStep(SVN(repourl=Interpolate("https://svn.apache.org/repos/asf/%(src::branch:~creadur/tentacles/trunk)s")))

f_creadur_3.addStep(Compile(command=["mvn" , "clean" , "install"]))

b_creadur_3 = {'name': "tentacles-trunk",
      'slavename': "lares_ubuntu",
      'builddir': "tentacles-trunk",
      'factory': f_creadur_3,
      'category': "tentacles-trunk",
      }

c['builders'].append(b_creadur_3)


#mail status

# custom mail message

from buildbot.status.builder import Results
def creadurMessageFormatter(mode, name, build, results, master_status):
    result = Results[results]

    text = list()
    text.append("Hi! , The %s builder has just completed a run" % name)
    text.append("\nSTATUS: %s" % result.title())
    text.append("\n Build using the ASF buildslave: %s" % build.getSlavename())
    text.append("\n Build results at: %s" % master_status.getURLForThing(build))
    text.append("\n\n Yours Sincerely - The ASF Buildbot (%s)" % master_status.getBuildbotURL()) 
    text.append("--------------------------------------------------------------------------")
    text.append("\n Join the builds@apache.org mailing list for help with Buildbot")
    text.append("\n\n")
    return {
        'body' : "\n".join(text),
        'type' : 'plain'
    }

c['status'].append(mail.MailNotifier(fromaddr="buildbot@apache.org",
                                      extraRecipients=["dev@creadur.apache.org"],
                                      sendToInterestedUsers=False,
                                      mode="change",
                                      messageFormatter=creadurMessageFormatter,
                                      categories=["rat-trunk" , "whisker-trunk" , "tentacles-trunk"]))

c['status'].append(words.IRC(host="irc.freenode.net", nick="rat-bot",
                             allowForce=True,
                             channels=["#asftest"],
			      notify_events={
				'successToFailure': 1,
				'failureToSuccess': 1,
				},
                             categories=["rat-trunk" , "whisker-trunk" , "tentacles-trunk"]))

