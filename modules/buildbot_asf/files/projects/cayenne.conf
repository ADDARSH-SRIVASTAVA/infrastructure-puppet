# This is the config file for the cayenne project.

# schedulers

c['schedulers'].append(Nightly(name='cayenneNightly',
              builderNames=['cayenne-nightly'],
              branch='cayenne/main/trunk/',
              hour=1,
              minute=0))

c['schedulers'].append(AnyBranchScheduler(name="on-cayenne-rat-commit",
                         branches=["cayenne/main/trunk"],
                         treeStableTimer=2*60,
                         builderNames=["cayenne-trunk-rat-report"]))

#builders


f_cay_1 = factory.BuildFactory()
f_cay_1.addStep(SVN(repourl=Interpolate("https://svn.apache.org/repos/asf/%(src::branch:~cayenne/main/trunk)s")))
f_cay_1.addStep(Compile(command=["mvn", "clean", "install" , "javadoc:javadoc"]))

f_cay_1.addStep(DirectoryUpload(slavesrc="docs/doc/target/site/apidocs/doc/api",
                       masterdest="/tmp/cayenne/api",
		       haltOnFailure=True,
))

f_cay_1.addStep(MasterShellCommand(command="""
            cp -r /tmp/cayenne/api/* /x1/buildmaster/master1/public_html/projects/cayenne/api/"""))

# Cleanup tmp

f_cay_1.addStep(MasterShellCommand(command="""
            rm -rf /tmp/cayenne/api""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..

f_cay_1.addStep(Compile(command=["mvn", "site:site"],
                        workdir="build/docs/docbook"))

f_cay_1.addStep(DirectoryUpload(slavesrc="docs/docbook/cayenne-guide/target/site",
                       masterdest="/tmp/cayenne/docbook",
		       haltOnFailure=True,
))

f_cay_1.addStep(MasterShellCommand(command="""
            cp -r /tmp/cayenne/docbook/* /x1/buildmaster/master1/public_html/projects/cayenne/docbook/"""))

# Cleanup tmp

f_cay_1.addStep(MasterShellCommand(command="""
            rm -rf /tmp/cayenne/docbook""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..

b_cay_1 = {'name': "cayenne-nightly",
      'slavename': "orcus_ubuntu",
      'builddir': "cayenne-nightly",
      'factory': f_cay_1,
      'category': "cayenne-nightly",
      }

c['builders'].append(b_cay_1)

f_cay_2 = factory.BuildFactory()
f_cay_2.addStep(SVN(repourl=Interpolate("https://svn.apache.org/repos/asf/%(src::branch:~cayenne/main/trunk)s")))
# If checkout of source didn't work, then no point continuing.

f_cay_2.addStep(ShellCommand(
             command=['bash', '-c', 'ant -f /home/buildslave1/slave1/rat-buildfiles/cayenne.xml -lib /home/buildslave1/'],
))


# Above performs RAT tests on entire cayenne build directories, output to txt file.
# Now we will publish that report to ci.apache.org/projects/cayenne/rat-output.html
# assuming that the report step itself was successful.

f_cay_2.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/cayenne/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f_cay_2.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/cayenne/rat-output.xml;
            cp /tmp/cayenne/rat-output.xml /x1/buildmaster/master1/public_html/projects/cayenne/rat-output.xml"""))

# Cleanup tmp

f_cay_2.addStep(MasterShellCommand(command="""
            rm -rf /tmp/cayenne""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..


b_cay_2 = {'name': "cayenne-trunk-rat-report",
      'slavename': "orcus_ubuntu",
      'builddir': "cayenne-trunk-rat-report",
      'factory': f_cay_2,
      'category': "cayenne-trunk-rat-report",
      }

c['builders'].append(b_cay_2)

#mail status

c['status'].append(mail.MailNotifier(fromaddr="buildbot@apache.org",
                                     extraRecipients=["dev@cayenne.apache.org"],
                                     sendToInterestedUsers=False,
                                     mode="change",
                                     categories=["cayenne-nightly" , "cayenne-trunk-rat-report"]))

#c['status'].append(words.IRC(host="irc.freenode.net", nick="cayenne-bot",
#                              allowForce=True,
#                              channels=["#asftest"],
#			      notify_events={
#				'successToFailure': 1,
#				'failureToSuccess': 1,
#				},
#                              categories=["cayenne-nightly" , "cayenne-trunk-rat-report"]))


# schedulers

c['schedulers'].append(AnyBranchScheduler(name="on-cayenne-commit",
                         branches=["cayenne/site/cms"],
                         treeStableTimer=2,
                         builderNames=["cayenne-site-staging"]))

#builders

f121 = factory.BuildFactory()
f121.addStep(Compile(command=["perl" , "/usr/local/cms/build/build_svn.pl", "--source-base=/home/cmsslave/slave15/cayenne-site-staging/build/trunk/" , "--target-base=/usr/local/websites/cayenne/trunk/"]))
f121.addStep(ShellCommand(command=["svn", "ci", "--username=buildbot", "/usr/local/websites/cayenne/trunk", "-m", "Staging update by buildbot for cayenne"]))

b121 = {'name': "cayenne-site-staging",
      'slavename': "bb-cms-slave",
      'builddir': "cayenne-site-staging",
      'factory': f121,
      'category': "cayenne-site-staging",
      }

c['builders'].append(b121)

#mail status

c['status'].append(mail.MailNotifier(fromaddr="buildbot@apache.org",
                                     extraRecipients=["commits@cayenne.apache.org"],
                                     sendToInterestedUsers=False,
                                     mode="change",
                                     categories=["cayenne-site-staging"]))

