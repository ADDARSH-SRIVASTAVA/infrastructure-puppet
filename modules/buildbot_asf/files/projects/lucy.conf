# This is the config file for the Lucy project.

from buildbot.schedulers.triggerable import Triggerable
from buildbot.steps.trigger import Trigger

cms_staging_build(project='lucy', commitlist='issues@lucy.apache.org', branch='lucy/site')

# schedulers
#

c['schedulers'].append(SingleBranchScheduler(name="on-lucy-commit",
                    change_filter=filter.ChangeFilter(branch='master' , project='lucy'),
                    treeStableTimer=2,
                    builderNames=["lucy-trunk-rat" , "lucy-perl-fbsd", "lucy-c-fbsd"]))

c['schedulers'].append(SingleBranchScheduler(name="on-lucy-clownfish-commit",
                    change_filter=filter.ChangeFilter(branch='master' , project='lucy-clownfish'),
                    treeStableTimer=2,
                    builderNames=["lucy-clownfish-perl-fbsd", "lucy-clownfish-c-fbsd"]))

c['schedulers'].append(Triggerable(name="on-lucy-clownfish-perl-success",
                    builderNames=["lucy-perl-fbsd"]))

c['schedulers'].append(Triggerable(name="on-lucy-clownfish-c-success",
                    builderNames=["lucy-c-fbsd"]))

#builders

f_lucy_1 = factory.BuildFactory()
f_lucy_1.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/lucy.git",
                        mode="full",
                        method="fresh"))

# If checkout of source didn't work, then no point continuing.

f_lucy_1.addStep(ShellCommand(
             command=['bash', '-c', 'ant -f /home/buildslave2/slave2/rat-buildfiles/lucy.xml -lib /home/buildslave2/'],
))


# Above performs RAT tests on entire lucy build directories, output to txt file.
# Now we will publish that report to ci.apache.org/projects/lucy/rat-output.xml
# assuming that the report step itself was successful.

f_lucy_1.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/lucy/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f_lucy_1.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/lucy/rat-output.xml;
            cp /tmp/lucy/rat-output.xml /x1/buildmaster/master1/public_html/projects/lucy/rat-output.xml""",
#	    ratReportURL,
))

# Cleanup tmp

f_lucy_1.addStep(MasterShellCommand(command="""
            rm -rf /tmp/lucy""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..

b_lucy_1 = {'name': "lucy-trunk-rat",
      'slavename': "lares_ubuntu",
      'builddir': "lucy-trunk-rat",
      'factory': f_lucy_1,
      'category': "lucy-trunk-rat",
      }

c['builders'].append(b_lucy_1)


### Lucy Perl

f_lucy_2 = factory.BuildFactory()

# Update repo
f_lucy_2.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/lucy.git",
    mode="full",
    method="fresh"))

# Build
f_lucy_2.addStep(Configure(command="bash -c 'source ../../../lucy-clownfish-perl-fbsd/build/devel/bin/setup_env.sh && perl Build.PL'",
    workdir="build/perl",
))
f_lucy_2.addStep(Compile(command="bash -c 'source ../../../lucy-clownfish-perl-fbsd/build/devel/bin/setup_env.sh && ./Build'",
    workdir="build/perl",
))
f_lucy_2.addStep(Test(command="bash -c 'source ../../../lucy-clownfish-perl-fbsd/build/devel/bin/setup_env.sh && ./Build test'",
    workdir="build/perl",
))

b_lucy_2 = {'name': "lucy-perl-fbsd",
      'slavename': "bb-fbsd2_64bit",
      'builddir': "lucy-perl-fbsd",
      'factory': f_lucy_2,
      'category': "lucy-perl-fbsd",
      }

c['builders'].append(b_lucy_2)


### Clownfish Perl

f_lucy_3 = factory.BuildFactory()

# Update repo
f_lucy_3.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/lucy-clownfish.git",
    mode="full",
    method="fresh"))

# Build
f_lucy_3.addStep(Configure(command=["perl" , "Build.PL"],
    workdir="build/runtime/perl",
))
f_lucy_3.addStep(Compile(command=["./Build"],
    workdir="build/runtime/perl",
))
f_lucy_3.addStep(Test(command=["./Build" , "test"],
    workdir="build/compiler/perl",
))
f_lucy_3.addStep(Test(command=["./Build" , "test"],
    workdir="build/runtime/perl",
))

# Trigger Lucy build
f_lucy_3.addStep(Trigger(schedulerNames=["on-lucy-clownfish-perl-success"],
                         alwaysUseLatest=True))

b_lucy_3 = {'name': "lucy-clownfish-perl-fbsd",
      'slavename': "bb-fbsd2_64bit",
      'builddir': "lucy-clownfish-perl-fbsd",
      'factory': f_lucy_3,
      'category': "lucy-clownfish-perl-fbsd",
      }

c['builders'].append(b_lucy_3)


### Lucy C

f_lucy_4 = factory.BuildFactory()

# Update repo
f_lucy_4.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/lucy.git",
    mode="full",
    method="fresh"))

# Build
f_lucy_4.addStep(Configure(workdir="build/c"))
f_lucy_4.addStep(Compile(command="bash -c 'source ../../../lucy-clownfish-c-fbsd/build/devel/bin/setup_env.sh && make'",
    workdir="build/c",
))
f_lucy_4.addStep(Test(command="bash -c 'source ../../../lucy-clownfish-c-fbsd/build/devel/bin/setup_env.sh && make test'",
    workdir="build/c",
))

b_lucy_4 = {'name': "lucy-c-fbsd",
      'slavename': "bb-fbsd2_64bit",
      'builddir': "lucy-c-fbsd",
      'factory': f_lucy_4,
      'category': "lucy-c-fbsd",
      }

c['builders'].append(b_lucy_4)


### Clownfish C

f_lucy_5 = factory.BuildFactory()

# Update repo
f_lucy_5.addStep(Git(repourl="https://git-wip-us.apache.org/repos/asf/lucy-clownfish.git",
    mode="full",
    method="fresh"))

# C build
f_lucy_5.addStep(Configure(workdir="build/runtime/c"))
f_lucy_5.addStep(Compile(workdir="build/runtime/c"))
f_lucy_5.addStep(Test(workdir="build/compiler/c"))
f_lucy_5.addStep(Test(workdir="build/runtime/c"))

# Trigger Lucy build
f_lucy_5.addStep(Trigger(schedulerNames=["on-lucy-clownfish-c-success"],
                         alwaysUseLatest=True))

b_lucy_5 = {'name': "lucy-clownfish-c-fbsd",
      'slavename': "bb-fbsd2_64bit",
      'builddir': "lucy-clownfish-c-fbsd",
      'factory': f_lucy_5,
      'category': "lucy-clownfish-c-fbsd",
      }

c['builders'].append(b_lucy_5)



#mail status

#irc status

c['status'].append(words.IRC(host="irc.freenode.net", nick="lucy-bot",
                              allowForce=True,
                              channels=["#lucy_dev"],
			      notify_events={
				'successToFailure': 1,
				'failureToSuccess': 1,
				},
                              categories=["lucy-trunk-rat" , "lucy-perl-fbsd" , "lucy-clownfish-perl-fbsd", "lucy-c-fbsd", "lucy-clownfish-c-fbsd"]))
