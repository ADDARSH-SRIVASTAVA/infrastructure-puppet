# This is the config file for the wookie project.

cms_staging_build(project='wookie')

# schedulers

c['schedulers'].append(SingleBranchScheduler(name="on-wookie-commit",
                         change_filter = filter.ChangeFilter(branch = 'wookie/trunk'),
                         treeStableTimer=2,
                         builderNames=["wookie-trunk"]))

#builders


f28 = factory.BuildFactory()
f28.addStep(SVN(repourl=Interpolate("https://svn.apache.org/repos/asf/%(src::branch:~wookie/trunk)s")))

# If checkout of source didn't work, then no point continuing.

f28.addStep(Compile(command=["ant"],
                    haltOnFailure=True,
))

f28.addStep(Compile(command=["ant" , "compile-test"],
                    haltOnFailure=True,
))

f28.addStep(Compile(command=["ant" , "jar"],
                    haltOnFailure=True,
))

f28.addStep(Compile(command=["ant" , "publish-local"],
                    haltOnFailure=True,
))

f28.addStep(ShellCommand(
            command=['bash', '-c', 'ant -f /home/buildslave2/slave2/rat-buildfiles/wookie.xml -lib /home/buildslave2/'],
            description=["RAT Testing"],
            descriptionDone=["RAT Report Complete"],
            haltOnFailure=True,
))


# Above performs RAT tests on entire wookie build directories, output to txt file.
# Now we will publish that report to ci.apache.org/projects/wookie/rat-output.xml
# assuming that the report step itself was successful.

f28.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/wookie/rat-output.xml",
		       haltOnFailure=True,
))

# If we get this far, then the RAT report went fine and it was uploaded to master tmp
# dir without error. So now we can delete any previous report and move from tmp to
# published.

f28.addStep(MasterShellCommand(command="""
            rm -f /x1/buildmaster/master1/public_html/projects/wookie/rat-output.xml;
            cp /tmp/wookie/rat-output.xml /x1/buildmaster/master1/public_html/projects/wookie/rat-output.xml"""))

# Cleanup tmp

f28.addStep(MasterShellCommand(command="""
            rm -rf /tmp/wookie""",
            alwaysRun=True,
))

# Always run the tmp cleanup step, in case of failures part way through uploading etc..
            


b28 = {'name': "wookie-trunk",
      'slavename': "lares_ubuntu",
      'builddir': "wookie-trunk",
      'factory': f28,
      'category': "wookie-trunk",
      }

c['builders'].append(b28)

#mail status

c['status'].append(mail.MailNotifier(fromaddr="buildbot@apache.org",
                                     extraRecipients=["commits@wookie.apache.org"],
                                     sendToInterestedUsers=False,
                                     mode="change",
                                     categories=["wookie-trunk"]))

#c['status'].append(words.IRC(host="irc.freenode.net", nick="wookie-bot",
#                              allowForce=True,
#                              channels=["#asftest"],
#			      notify_events={
#				'successToFailure': 1,
#				'failureToSuccess': 1,
#				},
#                              categories=["wookie-trunk"]))

