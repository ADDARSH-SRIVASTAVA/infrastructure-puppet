# This is a template file that you can use to copy and adapt to add your
# project to buildbot. Have a look at other working project config files
# for more examples.

# Replace all occurances of $yourproject with your actual project name.
# -----------------------------------------------------------------------

# This is the config file for the $yourproject project.

# schedulers

c['schedulers'].append(AnyBranchScheduler(name="on-$yourproject-commit",
                         branches=["path/to/your/trunk"],
                         treeStableTimer=2,
                         builderNames=["$yourproject-trunk"]))

# Note: 'path/to/your/trunk' means everything after 'svn.apache.org/repos/asf/'
# Note: it can also be a 'path/to/your/release/branch' etc etc ...

# Note: Above, we are using the AnyBranchScheduler which will build your project
# after every commit. There is another option, to do a nightly build using the
# periodic scheduler instead of or as well as. For example :-

# c['schedulers'].append(Periodic(name="nightly",
#                      builderNames=["$yourproject-full"],
#                      periodicBuildTimer=24*60*60))


# Builders

# Replace all occurances of $n with a number not used by other projects.
# Open up projects.conf to see which numbers are in use and use the next
# available number. Dont forget to add your number when adding your
# entry to this file.

f$n = factory.BuildFactory()
f$n.addStep(SVN(mode='full', method='clobber', repourl="https://svn.apache.org/repos/asf/path/to/your/trunk"))

# Above is the most common use, building from our SVN.
# What about if your project uses Git? Fancy buildng your project and testing
# it from your Git branch before committing to SVN ? How about :-

# f$n = factory.BuildFactory()
# f$n.addStep(Git(repourl="git://git.apache.org/$yourproject.git"))
# f$n.addStep(Compile(command=["make" , "test"]))

# As Buildbot at Apache ONLY updates commits automatically from SVN, to test with
# a GIT repo you would have to set up a Periodic schedule or just do a manual
# 'force build' when needed. Contact builds@apache.org for more info.


# Within the [ brackets ] below replace with the ant, maven, perl, python, etc
# commands that you use to build, test and deploy your project.
# Each command line word is separated as shown below.
# You can have just one addStep or many, up to you how to separate build steps.

f$n.addStep(Compile(command=["mvn" , "install"]))
# f$n.addStep(Compile(command=["mvn" , "deploy"]))

# RAT Reports
# -----------
#
# We have a custom FileUpload class derived from FileUpload that takes care
# of adding a 'RAT Report' hyperlink onto the build output web page. An example
# usage would be:

f$n.addStep(FileUpload(slavesrc="../rat-output.xml",
                       masterdest="/tmp/$yourproject/rat-output.xml",
		       haltOnFailure=True,
))

# $slaveName below, replace with either 'lares_ubuntu' or 'orcus_ubuntu' - these
# are the only two slaves operating at present. Prereqs must be installed on
# appropriate slave for your project to build successfully. Inform builds@apache.org
# list to get the neccessary prereqs installed for you.

b$n = {'name': "$yourproject-trunk",
      'slavename': "$slaveName",
      'builddir': "$yourproject-trunk",
      'factory': f$n,
      'category': "$yourproject-trunk",
     }

c['builders'].append(b$n)

# mail status

c['status'].append(mail.MailNotifier(fromaddr="buildbot@apache.org",
                                      extraRecipients=["$yourproject-devlist@apache.org"],
                                      sendToInterestedUsers=False,
                                      categories=["$yourproject-trunk"]))

# IRC Status

# c['status'].append(words.IRC(host="irc.freenode.net", nick="$yourproject-bot",
#                              allowForce=True,
#                              channels=["#$yourprojectsChannel"],
#                              notify_events={
#				'successToFailure': 1,
#				'failureToSuccess': 1,
#				},
#                              categories=["$yourproject-trunk"]))

#-------------------------------------------------------------------------------------

# Once you have completed and saved this file, dont forget to 'svn add' it and then
# append an entry for this file in the main 'projects.conf' file.

# Commit your new $project.conf file and the altered projects.conf file to svn.
# A script on Orcus will then update these onto the build server and add them
# to the configuration. If all is well with the configuration additions you have just
# made then your project will show up after 5 minutes at http://ci.apache.org

# If you havent already, please read 'readme.txt' in this directory.

# Any questions, comments etc please direct to the builds@apache.org list which you
# should join now for all buildbot (and other CI server) related talk.

